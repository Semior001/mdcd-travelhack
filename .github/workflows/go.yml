name: Go

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  test:
    runs-on: ubuntu-latest

    container:
      image: semior/baseimage:latest

    services:
      postgres:
        image: postgres:10.8
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: test
        ports:
          - 5432:5432
        # needed because the postgres container does not provide a healthcheck
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5

    steps:
      - uses: actions/checkout@v2

      - name: Install psql client
        run: |
          apk add --no-cache --update postgresql-client

      - name: Migrate database schema for tests
        run: PGPASSWORD=postgres psql -h postgres -p 5432 -U postgres -d test -a -f $GITHUB_WORKSPACE/api_middleware/scripts/migrate.sql
        working-directory: api_middleware

      - name: Install go 1.14
        uses: actions/setup-go@v1
        with:
          go-version: 1.14

      - name: Install go 1.13
        uses: actions/setup-go@v1
        with:
          go-version: 1.13

      - name: Test api_middleware and extract coverage
        run: |
          cd api_middleware/app
          go test -mod=vendor -timeout=60s -covermode=count -coverprofile=$GITHUB_WORKSPACE/profile.cov_tmp ./...
          cat $GITHUB_WORKSPACE/profile.cov_tmp | grep -v "_mock.go" > $GITHUB_WORKSPACE/profile.cov
        env:
          DB_TEST: postgres://postgres:postgres@postgres:5432/test?sslmode=disable

      - name: Install golangci-lint
        run: |
          curl -sfL https://raw.githubusercontent.com/golangci/golangci-lint/master/install.sh| sh -s -- -b $GITHUB_WORKSPACE v1.20.0

      - name: Run linters
        run: $GITHUB_WORKSPACE/golangci-lint run --config .golangci.yml ./...
        working-directory: api_middleware

      - name: Show coverage
        run: cat $GITHUB_WORKSPACE/profile.cov
        working-directory: api_middleware
