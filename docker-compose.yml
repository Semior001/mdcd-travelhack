version: "3.3"

services:
    app:
        build:
            context: api_middleware
            dockerfile: Dockerfile
        image: semior/mdcd_api_middleware:latest
        container_name: "mdcd_api_middleware"
        hostname: "mdcd_api_middleware"
        volumes:
            - ./api_middleware:/srv
        depends_on:
            - "db"
        environment:
            DEBUG: 'true'
            DBDRIVER: '${DB_DRIVER}'
            DBSOURCE: '${DB_URI}'
            DBMIGRATEFORCE: '${DBMIGRATEFORCE}'
            BCRYPTCOST: '${BCRYPTCOST}'
            DBUSER: '${DB_USER}'
            DBPASSWORD: '${DB_PASSWORD}'
            JWTSECRET: '${JWTSECRET}'
            STORAGEPATH: '${STORAGEPATH}'
            SERVICEURL: '${SERVICEURL}'
            RU_EMAIL: '${RU_EMAIL}'
            RU_PASSWORD: '${RU_PASSWORD}'
            IMGPROCURL: 'http://imgproc:8082/'
            PRINTSRVURL: 'http://printsrv:8083/'
        ports:
            - 8080:8080
        command: ["/srv/scripts/wait-for-pgsql.sh", "db", "/entrypoint.sh", "serve"]

    imgproc:
        build:
            context: imgproc
            dockerfile: Dockerfile
        image: semior/mdcd_imgproc:latest
        container_name: "mdcd_imgproc"
        hostname: "mdcd_imgproc"
        environment:
            DEBUG: 'true'
            SERVICEURL: 'http://0.0.0.0:8082/'
        ports:
            - 8082:8082

    printsrv:
        build:
            context: printsrv
            dockerfile: Dockerfile
        image: semior/mdcd_printsrv:latest
        container_name: "mdcd_printsrv"
        hostname: "mdcd_printsrv"
        environment:
            DEBUG: 'true'
            SERVICEURL: 'http://0.0.0.0:8083/'
        ports:
            - 8083:8083

    db:
        image: postgres:latest
        environment:
            POSTGRES_USER:     '${DB_USER}'
            POSTGRES_DB:       '${DB_NAME}'
            POSTGRES_PASSWORD: '${DB_PASSWORD}'
        volumes:
            - ./db_data:/var/lib/postgresql/data
        ports:
            - 5432:5432
    adminer:
        image: adminer
        depends_on: 
            - "db"
        ports:
            - 8081:8080
